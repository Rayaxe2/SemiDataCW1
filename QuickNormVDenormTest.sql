SET TIMING ON

/* DNORM TEST 1 */
SELECT EmployeeID AS “Employee ID”, EmpFName AS “First Name”, EmpLName AS “Last Name”
FROM SHIFT_DNORM_BIG 
WHERE ShiftType IN ('NIGHT','AFTERNOON')
GROUP BY EmployeeID, EmpFName, EmpLName  
ORDER BY EmployeeID;

/* NORM TEST 1 */
SELECT SHIFT_BIG.EmployeeID AS “Employee ID”, EMPLOYEE_BIG.FirstName AS “First Name”, EMPLOYEE_BIG.LastName AS “Last Name”
FROM SHIFT_BIG
INNER JOIN EMPLOYEE_BIG ON SHIFT_BIG.EmployeeID = EMPLOYEE_BIG.NINumber
WHERE SHIFT_BIG.ShiftType IN ('NIGHT','AFTERNOON') 
GROUP BY SHIFT_BIG.EmployeeID, EMPLOYEE_BIG.FirstName, EMPLOYEE_BIG.LastName 
ORDER BY SHIFT_BIG.EmployeeID;

/* DNORM TEST 2 */
SELECT ClientID AS “Client”, COUNT(*) AS “Total bookings”, AVG(AmountPaid) AS “Average booking cost”, MAX(AmountPaid) AS “Maximum paid”, MIN(AmountPaid) AS “Minimum paid”
FROM BOOKING_DNORM_BIG
WHERE ClientID IS NOT NULL
GROUP BY ClientID;

/* NORM TEST 2.1 */
SELECT ClientID AS “Client”, COUNT(*) AS “Total bookings”, AVG(AmountPaid) AS “Average booking cost”, MAX(AmountPaid) AS “Maximum paid”, MIN(AmountPaid) AS “Minimum paid”
FROM BOOKING BK
INNER JOIN RECURRENT_BOOKING RECB ON BK.BookingID = RECB.BookingID
INNER JOIN REGULAR_BOOKING REGB ON RECB.RegBookID = REGB.RegBookID
INNER JOIN PAYMENT PY ON PY.BookingID = BK.BookingID
GROUP BY ClientID;

/* INCREASE SOMEWHAT EXPONENTIALLY (Normalized) */
DROP TABLE REGULAR_BOOKING_BIG;
DROP TABLE CLIENTS_BIG;
DROP TABLE CARS_BIG;
DROP TABLE DRIVER_REVENUE_BIG;
DROP TABLE BOOKING_BIG;
DROP TABLE EMPLOYEE_INCIDENTS_BIG;
DROP TABLE SHIFT_BIG;
DROP TABLE EMPLOYEE_BIG;

DROP TABLE RECURRENT_BOOKING_BIG;
DROP TABLE PAY_TYPE_BIG;
DROP TABLE DRIVER_BIG;
DROP TABLE OPERATOR_BIG;
DROP TABLE  CITY_LOOKUP_BIG;
DROP TABLE CORPORATE_CLIENT_BIG;
DROP TABLE PAYMENT_BIG;

CREATE TABLE REGULAR_BOOKING_BIG AS SELECT * FROM REGULAR_BOOKING;
CREATE TABLE CLIENTS_BIG AS SELECT * FROM CLIENTS;
CREATE TABLE CARS_BIG AS SELECT * FROM CARS;
CREATE TABLE DRIVER_REVENUE_BIG AS SELECT * FROM DRIVER_REVENUE;
CREATE TABLE BOOKING_BIG AS SELECT * FROM BOOKING;
CREATE TABLE EMPLOYEE_INCIDENTS_BIG AS SELECT * FROM EMPLOYEE_INCIDENTS;
CREATE TABLE SHIFT_BIG AS SELECT * FROM SHIFT;
CREATE TABLE EMPLOYEE_BIG AS SELECT * FROM EMPLOYEE;

CREATE TABLE RECURRENT_BOOKING_BIG AS SELECT * FROM RECURRENT_BOOKING;
CREATE TABLE PAY_TYPE_BIG AS SELECT * FROM PAY_TYPE;
CREATE TABLE DRIVER_BIG AS SELECT * FROM DRIVER;
CREATE TABLE OPERATOR_BIG AS SELECT * FROM OPERATOR;
CREATE TABLE CITY_LOOKUP_BIG AS SELECT * FROM CITY_LOOKUP;
CREATE TABLE CORPORATE_CLIENT_BIG AS SELECT * FROM CORPORATE_CLIENT;
CREATE TABLE PAYMENT_BIG AS SELECT * FROM PAYMENT;

SET SERVEROUTPUT ON;

DECLARE
cntr NUMBER := 0;
BEGIN
    FOR loop_counter IN 1..5
LOOP
cntr := cntr  + 1;
INSERT INTO BOOKING_BIG SELECT * FROM BOOKING_BIG;
INSERT INTO REGULAR_BOOKING_BIG SELECT * FROM REGULAR_BOOKING_BIG;
INSERT INTO SHIFT_BIG SELECT * FROM SHIFT_BIG;
INSERT INTO CARS_BIG SELECT * FROM CARS_BIG;
INSERT INTO DRIVER_REVENUE_BIG SELECT * FROM DRIVER_REVENUE_BIG;
INSERT INTO EMPLOYEE_INCIDENTS_BIG SELECT * FROM EMPLOYEE_INCIDENTS_BIG;
INSERT INTO CLIENTS_BIG SELECT * FROM CLIENTS_BIG;

INSERT INTO RECURRENT_BOOKING_BIG SELECT * FROM RECURRENT_BOOKING_BIG;
INSERT INTO PAY_TYPE_BIG SELECT * FROM PAY_TYPE_BIG ;
INSERT INTO DRIVER_BIG SELECT * FROM DRIVER_BIG;
INSERT INTO CITY_LOOKUP_BIG SELECT * FROM CITY_LOOKUP_BIG;
INSERT INTO CORPORATE_CLIENT_BIG SELECT * FROM CORPORATE_CLIENT_BIG;
INSERT INTO OPERATOR_BIG  SELECT * FROM OPERATOR_BIG;
INSERT INTO PAYMENT_BIG SELECT * FROM PAYMENT_BIG;

END LOOP;
dbms_output.put_line('Executed: ' || cntr) ;
END;
/

/* NORM TEST 2.2 */
SELECT REGB.ClientID AS “Client”, COUNT(*) AS “Total bookings”, AVG(PY.AmountPaid) AS “Average booking cost”, MAX(PY.AmountPaid) AS “Maximum paid”, MIN(PY.AmountPaid) AS “Minimum paid”
FROM BOOKING_BIG BK
INNER JOIN RECURRENT_BOOKING_BIG RECB ON BK.BookingID = RECB.BookingID
INNER JOIN REGULAR_BOOKING_BIG REGB ON RECB.RegBookID = REGB.RegBookID
INNER JOIN PAYMENT_BIG PY ON PY.BookingID = BK.BookingID
GROUP BY ClientID;

/* DNORM TEST 3 */
UPDATE EMPLOYEE_DNORM_BIG
SET 
    NINUMBER = ROWNUM,
ADDRESS = '123 STREET',
POSTCODE = ROWNUM,
CITY = 'LONDON',
FIRSTNAME = 'NAME1',
LASTNAME = 'NAME2',
PPHONENO = '01234567891',
SPHONENO = '01234567891',
SEX = 'F',
DOB = TO_DATE('02-NOV-2020', 'DD-MON-YYYY'),
EMAIL = 'EXAMPLE@EMAIL.COM',
HIREDATE  = TO_DATE('02-NOV-2020', 'DD-MON-YYYY'),
DRIVERLICENSEID = NULL,
PAYTYPE = NULL,
PAYVALUE = NULL,
SALARY = NULL,
TAXCODE = NULL;

/* NORM TEST 3 */
UPDATE EMPLOYEE_BIG
SET 
NINUMBER = ROWNUM,
ADDRESS = '123 STREET',
POSTCODE = ROWNUM,
FIRSTNAME = 'NAME1',
LASTNAME = 'NAME2',
PPHONENO = '01234567891',
SPHONENO = '01234567891',
SEX = 'F',
DOB = TO_DATE('02-NOV-2020', 'DD-MON-YYYY'),
EMAIL = 'EXAMPLE@EMAIL.COM',
HIREDATE  = TO_DATE('02-NOV-2020', 'DD-MON-YYYY');

/* INCREASE SOMEWHAT EXPONENTIALLY (Normalized and denormalized) */
DROP TABLE REGULAR_BOOKING_BIG;
DROP TABLE CLIENTS_BIG;
DROP TABLE CARS_BIG;
DROP TABLE DRIVER_REVENUE_BIG;
DROP TABLE BOOKING_BIG;
DROP TABLE EMPLOYEE_INCIDENTS_BIG;
DROP TABLE SHIFT_BIG;
DROP TABLE EMPLOYEE_BIG;

DROP TABLE RECURRENT_BOOKING_BIG;
DROP TABLE PAY_TYPE_BIG;
DROP TABLE DRIVER_BIG;
DROP TABLE OPERATOR_BIG;
DROP TABLE  CITY_LOOKUP_BIG;
DROP TABLE CORPORATE_CLIENT_BIG;
DROP TABLE PAYMENT_BIG;

CREATE TABLE REGULAR_BOOKING_BIG AS SELECT * FROM REGULAR_BOOKING;
CREATE TABLE CLIENTS_BIG AS SELECT * FROM CLIENTS;
CREATE TABLE CARS_BIG AS SELECT * FROM CARS;
CREATE TABLE DRIVER_REVENUE_BIG AS SELECT * FROM DRIVER_REVENUE;
CREATE TABLE BOOKING_BIG AS SELECT * FROM BOOKING;
CREATE TABLE EMPLOYEE_INCIDENTS_BIG AS SELECT * FROM EMPLOYEE_INCIDENTS;
CREATE TABLE SHIFT_BIG AS SELECT * FROM SHIFT;
CREATE TABLE EMPLOYEE_BIG AS SELECT * FROM EMPLOYEE;

CREATE TABLE RECURRENT_BOOKING_BIG AS SELECT * FROM RECURRENT_BOOKING;
CREATE TABLE PAY_TYPE_BIG AS SELECT * FROM PAY_TYPE;
CREATE TABLE DRIVER_BIG AS SELECT * FROM DRIVER;
CREATE TABLE OPERATOR_BIG AS SELECT * FROM OPERATOR;
CREATE TABLE CITY_LOOKUP_BIG AS SELECT * FROM CITY_LOOKUP;
CREATE TABLE CORPORATE_CLIENT_BIG AS SELECT * FROM CORPORATE_CLIENT;
CREATE TABLE PAYMENT_BIG AS SELECT * FROM PAYMENT;

SET SERVEROUTPUT ON;

DECLARE
cntr NUMBER := 0;
BEGIN
    FOR loop_counter IN 1..5
LOOP
cntr := cntr  + 1;
INSERT INTO BOOKING_BIG SELECT * FROM BOOKING_BIG;
INSERT INTO REGULAR_BOOKING_BIG SELECT * FROM REGULAR_BOOKING_BIG;
INSERT INTO SHIFT_BIG SELECT * FROM SHIFT_BIG;
INSERT INTO CARS_BIG SELECT * FROM CARS_BIG;
INSERT INTO DRIVER_REVENUE_BIG SELECT * FROM DRIVER_REVENUE_BIG;
INSERT INTO EMPLOYEE_INCIDENTS_BIG SELECT * FROM EMPLOYEE_INCIDENTS_BIG;
INSERT INTO CLIENTS_BIG SELECT * FROM CLIENTS_BIG;

INSERT INTO RECURRENT_BOOKING_BIG SELECT * FROM RECURRENT_BOOKING_BIG;
INSERT INTO PAY_TYPE_BIG SELECT * FROM PAY_TYPE_BIG ;
INSERT INTO DRIVER_BIG SELECT * FROM DRIVER_BIG;
INSERT INTO CITY_LOOKUP_BIG SELECT * FROM CITY_LOOKUP_BIG;
INSERT INTO CORPORATE_CLIENT_BIG SELECT * FROM CORPORATE_CLIENT_BIG;
INSERT INTO OPERATOR_BIG  SELECT * FROM OPERATOR_BIG;
INSERT INTO PAYMENT_BIG SELECT * FROM PAYMENT_BIG;

END LOOP;
dbms_output.put_line('Executed: ' || cntr) ;
END;
/

DROP TABLE REGULAR_BOOKING_DNORM_BIG;
DROP TABLE CLIENTS_DNORM_BIG;
DROP TABLE CARS_DNORM_BIG;
DROP TABLE DRIVER_REVENUE_DNORM_BIG;
DROP TABLE BOOKING_DNORM_BIG;
DROP TABLE EMPLOYEE_INCIDENTS_DNORM_BIG;
DROP TABLE SHIFT_DNORM_BIG;
DROP TABLE EMPLOYEE_DNORM_BIG;

CREATE TABLE REGULAR_BOOKING_DNORM_BIG AS SELECT * FROM REGULAR_BOOKING_DNORM;
CREATE TABLE CLIENTS_DNORM_BIG AS SELECT * FROM CLIENTS_DNORM;
CREATE TABLE CARS_DNORM_BIG AS SELECT * FROM CARS_DNORM;
CREATE TABLE DRIVER_REVENUE_DNORM_BIG AS SELECT * FROM DRIVER_REVENUE_DNORM;
CREATE TABLE BOOKING_DNORM_BIG AS SELECT * FROM BOOKING_DNORM;
CREATE TABLE EMPLOYEE_INCIDENTS_DNORM_BIG AS SELECT * FROM EMPLOYEE_INCIDENTS_DNORM;
CREATE TABLE SHIFT_DNORM_BIG AS SELECT * FROM SHIFT_DNORM;
CREATE TABLE EMPLOYEE_DNORM_BIG AS SELECT * FROM EMPLOYEE_DNORM;

SET SERVEROUTPUT ON;

DECLARE
cntr NUMBER := 0;
BEGIN
    FOR loop_counter IN 1..7
LOOP
cntr := cntr  + 1;
INSERT INTO BOOKING_DNORM_BIG SELECT * FROM BOOKING_DNORM_BIG;
INSERT INTO REGULAR_BOOKING_DNORM_BIG SELECT * FROM REGULAR_BOOKING_DNORM_BIG;
INSERT INTO SHIFT_DNORM_BIG SELECT * FROM SHIFT_DNORM_BIG;
INSERT INTO CARS_DNORM_BIG SELECT * FROM CARS_DNORM_BIG;
INSERT INTO DRIVER_REVENUE_DNORM_BIG SELECT * FROM DRIVER_REVENUE_DNORM_BIG;
INSERT INTO EMPLOYEE_INCIDENTS_DNORM_BIG SELECT * FROM EMPLOYEE_INCIDENTS_DNORM_BIG;
INSERT INTO CLIENTS_DNORM_BIG SELECT * FROM CLIENTS_DNORM_BIG;
END LOOP;
dbms_output.put_line('Executed: ' || cntr) ;
END;
/

SET TIMING ON

/* DNORM TEST 1 */
SELECT EmployeeID AS “Employee ID”, EmpFName AS “First Name”, EmpLName AS “Last Name”
FROM SHIFT_DNORM_BIG 
WHERE ShiftType IN ('NIGHT','AFTERNOON')
GROUP BY EmployeeID, EmpFName, EmpLName  
ORDER BY EmployeeID;

/* NORM TEST 1 */
SELECT SHIFT_BIG.EmployeeID AS “Employee ID”, EMPLOYEE_BIG.FirstName AS “First Name”, EMPLOYEE_BIG.LastName AS “Last Name”
FROM SHIFT_BIG
INNER JOIN EMPLOYEE_BIG ON SHIFT_BIG.EmployeeID = EMPLOYEE_BIG.NINumber
WHERE SHIFT_BIG.ShiftType IN ('NIGHT','AFTERNOON') 
GROUP BY SHIFT_BIG.EmployeeID, EMPLOYEE_BIG.FirstName, EMPLOYEE_BIG.LastName 
ORDER BY SHIFT_BIG.EmployeeID;

/* DNORM TEST 2 */
SELECT ClientID AS “Client”, COUNT(*) AS “Total bookings”, AVG(AmountPaid) AS “Average booking cost”, MAX(AmountPaid) AS “Maximum paid”, MIN(AmountPaid) AS “Minimum paid”
FROM BOOKING_DNORM_BIG
WHERE ClientID IS NOT NULL
GROUP BY ClientID;

/* NORM TEST 2.1 */
SELECT ClientID AS “Client”, COUNT(*) AS “Total bookings”, AVG(AmountPaid) AS “Average booking cost”, MAX(AmountPaid) AS “Maximum paid”, MIN(AmountPaid) AS “Minimum paid”
FROM BOOKING BK
INNER JOIN RECURRENT_BOOKING RECB ON BK.BookingID = RECB.BookingID
INNER JOIN REGULAR_BOOKING REGB ON RECB.RegBookID = REGB.RegBookID
INNER JOIN PAYMENT PY ON PY.BookingID = BK.BookingID
GROUP BY ClientID;

/* INCREASE SOMEWHAT EXPONENTIALLY (Normalized) */
DROP TABLE REGULAR_BOOKING_BIG;
DROP TABLE CLIENTS_BIG;
DROP TABLE CARS_BIG;
DROP TABLE DRIVER_REVENUE_BIG;
DROP TABLE BOOKING_BIG;
DROP TABLE EMPLOYEE_INCIDENTS_BIG;
DROP TABLE SHIFT_BIG;
DROP TABLE EMPLOYEE_BIG;

DROP TABLE RECURRENT_BOOKING_BIG;
DROP TABLE PAY_TYPE_BIG;
DROP TABLE DRIVER_BIG;
DROP TABLE OPERATOR_BIG;
DROP TABLE  CITY_LOOKUP_BIG;
DROP TABLE CORPORATE_CLIENT_BIG;
DROP TABLE PAYMENT_BIG;

CREATE TABLE REGULAR_BOOKING_BIG AS SELECT * FROM REGULAR_BOOKING;
CREATE TABLE CLIENTS_BIG AS SELECT * FROM CLIENTS;
CREATE TABLE CARS_BIG AS SELECT * FROM CARS;
CREATE TABLE DRIVER_REVENUE_BIG AS SELECT * FROM DRIVER_REVENUE;
CREATE TABLE BOOKING_BIG AS SELECT * FROM BOOKING;
CREATE TABLE EMPLOYEE_INCIDENTS_BIG AS SELECT * FROM EMPLOYEE_INCIDENTS;
CREATE TABLE SHIFT_BIG AS SELECT * FROM SHIFT;
CREATE TABLE EMPLOYEE_BIG AS SELECT * FROM EMPLOYEE;

CREATE TABLE RECURRENT_BOOKING_BIG AS SELECT * FROM RECURRENT_BOOKING;
CREATE TABLE PAY_TYPE_BIG AS SELECT * FROM PAY_TYPE;
CREATE TABLE DRIVER_BIG AS SELECT * FROM DRIVER;
CREATE TABLE OPERATOR_BIG AS SELECT * FROM OPERATOR;
CREATE TABLE CITY_LOOKUP_BIG AS SELECT * FROM CITY_LOOKUP;
CREATE TABLE CORPORATE_CLIENT_BIG AS SELECT * FROM CORPORATE_CLIENT;
CREATE TABLE PAYMENT_BIG AS SELECT * FROM PAYMENT;

SET SERVEROUTPUT ON;

DECLARE
cntr NUMBER := 0;
BEGIN
    FOR loop_counter IN 1..5
LOOP
cntr := cntr  + 1;
INSERT INTO BOOKING_BIG SELECT * FROM BOOKING_BIG;
INSERT INTO REGULAR_BOOKING_BIG SELECT * FROM REGULAR_BOOKING_BIG;
INSERT INTO SHIFT_BIG SELECT * FROM SHIFT_BIG;
INSERT INTO CARS_BIG SELECT * FROM CARS_BIG;
INSERT INTO DRIVER_REVENUE_BIG SELECT * FROM DRIVER_REVENUE_BIG;
INSERT INTO EMPLOYEE_INCIDENTS_BIG SELECT * FROM EMPLOYEE_INCIDENTS_BIG;
INSERT INTO CLIENTS_BIG SELECT * FROM CLIENTS_BIG;

INSERT INTO RECURRENT_BOOKING_BIG SELECT * FROM RECURRENT_BOOKING_BIG;
INSERT INTO PAY_TYPE_BIG SELECT * FROM PAY_TYPE_BIG ;
INSERT INTO DRIVER_BIG SELECT * FROM DRIVER_BIG;
INSERT INTO CITY_LOOKUP_BIG SELECT * FROM CITY_LOOKUP_BIG;
INSERT INTO CORPORATE_CLIENT_BIG SELECT * FROM CORPORATE_CLIENT_BIG;
INSERT INTO OPERATOR_BIG  SELECT * FROM OPERATOR_BIG;
INSERT INTO PAYMENT_BIG SELECT * FROM PAYMENT_BIG;

END LOOP;
dbms_output.put_line('Executed: ' || cntr) ;
END;
/

/* NORM TEST 2.2 */
SELECT REGB.ClientID AS “Client”, COUNT(*) AS “Total bookings”, AVG(PY.AmountPaid) AS “Average booking cost”, MAX(PY.AmountPaid) AS “Maximum paid”, MIN(PY.AmountPaid) AS “Minimum paid”
FROM BOOKING_BIG BK
INNER JOIN RECURRENT_BOOKING_BIG RECB ON BK.BookingID = RECB.BookingID
INNER JOIN REGULAR_BOOKING_BIG REGB ON RECB.RegBookID = REGB.RegBookID
INNER JOIN PAYMENT_BIG PY ON PY.BookingID = BK.BookingID
GROUP BY ClientID;

/* DNORM TEST 3 */
UPDATE EMPLOYEE_DNORM_BIG
SET 
    NINUMBER = ROWNUM,
ADDRESS = '123 STREET',
POSTCODE = ROWNUM,
CITY = 'LONDON',
FIRSTNAME = 'NAME1',
LASTNAME = 'NAME2',
PPHONENO = '01234567891',
SPHONENO = '01234567891',
SEX = 'F',
DOB = TO_DATE('02-NOV-2020', 'DD-MON-YYYY'),
EMAIL = 'EXAMPLE@EMAIL.COM',
HIREDATE  = TO_DATE('02-NOV-2020', 'DD-MON-YYYY'),
DRIVERLICENSEID = NULL,
PAYTYPE = NULL,
PAYVALUE = NULL,
SALARY = NULL,
TAXCODE = NULL;

/* NORM TEST 3 */
UPDATE EMPLOYEE_BIG
SET 
NINUMBER = ROWNUM,
ADDRESS = '123 STREET',
POSTCODE = ROWNUM,
FIRSTNAME = 'NAME1',
LASTNAME = 'NAME2',
PPHONENO = '01234567891',
SPHONENO = '01234567891',
SEX = 'F',
DOB = TO_DATE('02-NOV-2020', 'DD-MON-YYYY'),
EMAIL = 'EXAMPLE@EMAIL.COM',
HIREDATE  = TO_DATE('02-NOV-2020', 'DD-MON-YYYY');

/* INCREASE SOMEWHAT EXPONENTIALLY (Normalized and denormalized) */
DROP TABLE REGULAR_BOOKING_BIG;
DROP TABLE CLIENTS_BIG;
DROP TABLE CARS_BIG;
DROP TABLE DRIVER_REVENUE_BIG;
DROP TABLE BOOKING_BIG;
DROP TABLE EMPLOYEE_INCIDENTS_BIG;
DROP TABLE SHIFT_BIG;
DROP TABLE EMPLOYEE_BIG;

DROP TABLE RECURRENT_BOOKING_BIG;
DROP TABLE PAY_TYPE_BIG;
DROP TABLE DRIVER_BIG;
DROP TABLE OPERATOR_BIG;
DROP TABLE  CITY_LOOKUP_BIG;
DROP TABLE CORPORATE_CLIENT_BIG;
DROP TABLE PAYMENT_BIG;

CREATE TABLE REGULAR_BOOKING_BIG AS SELECT * FROM REGULAR_BOOKING;
CREATE TABLE CLIENTS_BIG AS SELECT * FROM CLIENTS;
CREATE TABLE CARS_BIG AS SELECT * FROM CARS;
CREATE TABLE DRIVER_REVENUE_BIG AS SELECT * FROM DRIVER_REVENUE;
CREATE TABLE BOOKING_BIG AS SELECT * FROM BOOKING;
CREATE TABLE EMPLOYEE_INCIDENTS_BIG AS SELECT * FROM EMPLOYEE_INCIDENTS;
CREATE TABLE SHIFT_BIG AS SELECT * FROM SHIFT;
CREATE TABLE EMPLOYEE_BIG AS SELECT * FROM EMPLOYEE;

CREATE TABLE RECURRENT_BOOKING_BIG AS SELECT * FROM RECURRENT_BOOKING;
CREATE TABLE PAY_TYPE_BIG AS SELECT * FROM PAY_TYPE;
CREATE TABLE DRIVER_BIG AS SELECT * FROM DRIVER;
CREATE TABLE OPERATOR_BIG AS SELECT * FROM OPERATOR;
CREATE TABLE CITY_LOOKUP_BIG AS SELECT * FROM CITY_LOOKUP;
CREATE TABLE CORPORATE_CLIENT_BIG AS SELECT * FROM CORPORATE_CLIENT;
CREATE TABLE PAYMENT_BIG AS SELECT * FROM PAYMENT;

SET SERVEROUTPUT ON;

DECLARE
cntr NUMBER := 0;
BEGIN
    FOR loop_counter IN 1..5
LOOP
cntr := cntr  + 1;
INSERT INTO BOOKING_BIG SELECT * FROM BOOKING_BIG;
INSERT INTO REGULAR_BOOKING_BIG SELECT * FROM REGULAR_BOOKING_BIG;
INSERT INTO SHIFT_BIG SELECT * FROM SHIFT_BIG;
INSERT INTO CARS_BIG SELECT * FROM CARS_BIG;
INSERT INTO DRIVER_REVENUE_BIG SELECT * FROM DRIVER_REVENUE_BIG;
INSERT INTO EMPLOYEE_INCIDENTS_BIG SELECT * FROM EMPLOYEE_INCIDENTS_BIG;
INSERT INTO CLIENTS_BIG SELECT * FROM CLIENTS_BIG;

INSERT INTO RECURRENT_BOOKING_BIG SELECT * FROM RECURRENT_BOOKING_BIG;
INSERT INTO PAY_TYPE_BIG SELECT * FROM PAY_TYPE_BIG ;
INSERT INTO DRIVER_BIG SELECT * FROM DRIVER_BIG;
INSERT INTO CITY_LOOKUP_BIG SELECT * FROM CITY_LOOKUP_BIG;
INSERT INTO CORPORATE_CLIENT_BIG SELECT * FROM CORPORATE_CLIENT_BIG;
INSERT INTO OPERATOR_BIG  SELECT * FROM OPERATOR_BIG;
INSERT INTO PAYMENT_BIG SELECT * FROM PAYMENT_BIG;

END LOOP;
dbms_output.put_line('Executed: ' || cntr) ;
END;
/

DROP TABLE REGULAR_BOOKING_DNORM_BIG;
DROP TABLE CLIENTS_DNORM_BIG;
DROP TABLE CARS_DNORM_BIG;
DROP TABLE DRIVER_REVENUE_DNORM_BIG;
DROP TABLE BOOKING_DNORM_BIG;
DROP TABLE EMPLOYEE_INCIDENTS_DNORM_BIG;
DROP TABLE SHIFT_DNORM_BIG;
DROP TABLE EMPLOYEE_DNORM_BIG;

CREATE TABLE REGULAR_BOOKING_DNORM_BIG AS SELECT * FROM REGULAR_BOOKING_DNORM;
CREATE TABLE CLIENTS_DNORM_BIG AS SELECT * FROM CLIENTS_DNORM;
CREATE TABLE CARS_DNORM_BIG AS SELECT * FROM CARS_DNORM;
CREATE TABLE DRIVER_REVENUE_DNORM_BIG AS SELECT * FROM DRIVER_REVENUE_DNORM;
CREATE TABLE BOOKING_DNORM_BIG AS SELECT * FROM BOOKING_DNORM;
CREATE TABLE EMPLOYEE_INCIDENTS_DNORM_BIG AS SELECT * FROM EMPLOYEE_INCIDENTS_DNORM;
CREATE TABLE SHIFT_DNORM_BIG AS SELECT * FROM SHIFT_DNORM;
CREATE TABLE EMPLOYEE_DNORM_BIG AS SELECT * FROM EMPLOYEE_DNORM;

SET SERVEROUTPUT ON;

DECLARE
cntr NUMBER := 0;
BEGIN
    FOR loop_counter IN 1..7
LOOP
cntr := cntr  + 1;
INSERT INTO BOOKING_DNORM_BIG SELECT * FROM BOOKING_DNORM_BIG;
INSERT INTO REGULAR_BOOKING_DNORM_BIG SELECT * FROM REGULAR_BOOKING_DNORM_BIG;
INSERT INTO SHIFT_DNORM_BIG SELECT * FROM SHIFT_DNORM_BIG;
INSERT INTO CARS_DNORM_BIG SELECT * FROM CARS_DNORM_BIG;
INSERT INTO DRIVER_REVENUE_DNORM_BIG SELECT * FROM DRIVER_REVENUE_DNORM_BIG;
INSERT INTO EMPLOYEE_INCIDENTS_DNORM_BIG SELECT * FROM EMPLOYEE_INCIDENTS_DNORM_BIG;
INSERT INTO CLIENTS_DNORM_BIG SELECT * FROM CLIENTS_DNORM_BIG;
END LOOP;
dbms_output.put_line('Executed: ' || cntr) ;
END;
/