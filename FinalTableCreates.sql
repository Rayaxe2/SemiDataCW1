/* DROP STATEMENTS */ 
DROP TABLE RECURRENT_BOOKING;
DROP TABLE PAYMENT;
DROP TABLE CORPORATE_CLIENT;
DROP TABLE REGULAR_BOOKING;
DROP TABLE CLIENTS;
DROP TABLE CARS;
DROP TABLE DRIVER_REVENUE;
DROP TABLE BOOKING;
DROP TABLE DRIVER;
DROP TABLE PAY_TYPE;
DROP TABLE OPERATOR;
DROP TABLE EMPLOYEE_INCIDENTS;
DROP TABLE SHIFT;
DROP TABLE EMPLOYEE;
DROP TABLE CITY_LOOKUP;

/* CITY_LOOKUP Table */ 
CREATE TABLE CITY_LOOKUP(
POSTCODE VARCHAR(8) PRIMARY KEY,
CITY VARCHAR(50) NOT NULL
);

/* CLIENTS Table */ 
CREATE TABLE CLIENTS (
CLIENTID CHAR(9) PRIMARY KEY CHECK(LENGTH(CLIENTID)=9),
CLIENTTYPE VARCHAR(15) NOT NULL CHECK(LENGTH(CLIENTTYPE)>6) CHECK(CLIENTTYPE IN ('CORPORATE', 'PRIVATE')),
CONTACTFNAME VARCHAR(255) NOT NULL,
CONTACTLNAME VARCHAR(255) NOT NULL,
PPHONENO CHAR(11) NOT NULL UNIQUE,
SPHONENO CHAR(11) UNIQUE,
EMAIL VARCHAR2(400) UNIQUE CHECK(EMAIL LIKE '%_@_%') CHECK(EMAIL LIKE '%.%')
);

/* PAY_TYPE Table */ 
CREATE TABLE PAY_TYPE (
PAYTYPE VARCHAR(9) PRIMARY KEY,
PAYVALUE NUMBER(9) NOT NULL  
);

/* EMPLOYEE Table */ 
CREATE TABLE EMPLOYEE(
NINUMBER CHAR(9) PRIMARY KEY, 
POSTCODE VARCHAR(20) NOT NULL, 
ADDRESS VARCHAR2(255) NOT NULL, 
FIRSTNAME VARCHAR(255) NOT NULL, 
LASTNAME VARCHAR(255) NOT NULL, 
PPHONENO CHAR(11) NOT NULL UNIQUE,
SPHONENO CHAR(11),
SEX CHAR(1) NOT NULL CHECK(SEX IN ('M', 'F')),
DOB DATE NOT NULL, 
EMAIL VARCHAR2(255) NOT NULL UNIQUE CHECK(EMAIL LIKE '%_@_%' AND EMAIL LIKE '%.%'), 
HIREDATE DATE NOT NULL,
CONSTRAINT FK_POSTCODE FOREIGN KEY(POSTCODE) REFERENCES CITY_LOOKUP(POSTCODE) ON DELETE CASCADE
);

/* OPERATOR Table */ 
CREATE TABLE OPERATOR (
OPERATORID CHAR(9) PRIMARY KEY CHECK(LENGTH(OPERATORID)=9),
EMPLOYEEID CHAR(9) NOT NULL UNIQUE CHECK(LENGTH(EMPLOYEEID)=9),
SALARY NUMBER(8,2) NOT NULL  CHECK(SALARY>0),
TAXCODE VARCHAR(20) NOT NULL,
CONSTRAINT FK_OPERATOR_EMPLOYEEID FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEE(NINUMBER) ON DELETE CASCADE
); 

/* DRIVER Table */ 
CREATE TABLE DRIVER (
DRIVERLICENSEID CHAR(9) PRIMARY KEY CHECK(LENGTH(DRIVERLICENSEID )=9),
EMPLOYEEID CHAR(9) NOT NULL UNIQUE CHECK(LENGTH(EMPLOYEEID)=9),
PAYTYPE VARCHAR (9) NOT NULL,
CONSTRAINT FK_DRIVER_EMPLOYEEID FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEE(NINUMBER) ON DELETE CASCADE,
CONSTRAINT FK_DRIVER_PAYTYPE FOREIGN KEY (PAYTYPE) REFERENCES PAY_TYPE(PAYTYPE)
);

/* BOOKING Table */ 
CREATE TABLE BOOKING (
BOOKINGID CHAR(9) PRIMARY KEY CHECK(LENGTH(BOOKINGID)=9),
OPERATORID CHAR(9) CHECK(LENGTH(OPERATORID)=9),
DRIVERID CHAR(9) CHECK(LENGTH(DRIVERID)=9),
DATEBOOKED DATE NOT NULL,
PICKUPDATE DATE NOT NULL,
PICKUPADDRESS VARCHAR(255)  NOT NULL,
DROPOFFADDRESS VARCHAR2(255) NOT NULL,
NOOFPASSENGERS NUMBER(2) NOT NULL CHECK(NOOFPASSENGERS>=1),
CUSTOMERPHONENUMBER CHAR(11) NOT NULL,
CONSTRAINT FK_BOOKING_OPERATORID FOREIGN KEY (OPERATORID) REFERENCES OPERATOR(OPERATORID) ON DELETE SET NULL,
CONSTRAINT FK_BOOKING_DRIVERID FOREIGN KEY (DRIVERID) REFERENCES DRIVER(DRIVERLICENSEID) ON DELETE SET NULL
);

/* REGULAR_BOOKING Table */ 
CREATE TABLE REGULAR_BOOKING(
REGBOOKID CHAR(9) CHECK(LENGTH(REGBOOKID)=9) CONSTRAINT PK_REGULAR_BOOKING PRIMARY KEY,
CLIENTID CHAR(9) CHECK(LENGTH(CLIENTID)=9) NOT NULL,
BOOKINGFREQUENCY VARCHAR(50) NOT NULL,
STARTDATE DATE NOT NULL,
NOOFTRANSPORTEES NUMBER(2) CHECK(NOOFTRANSPORTEES>=1),
DURATION VARCHAR(10) NOT NULL,
CONSTRAINT FK_REGULAR_BOOKING_CLIENTID FOREIGN KEY(CLIENTID) REFERENCES CLIENTS(CLIENTID) ON DELETE CASCADE
);

/* DRIVER_REVENUE Table */ 
CREATE TABLE DRIVER_REVENUE(
REVENUEID CHAR(9) CHECK(LENGTH(REVENUEID)=9) CONSTRAINT PK_DRIVER_REVENUE PRIMARY KEY,
DRIVERID CHAR(9) CHECK(LENGTH(DRIVERID)=9),
REVENUEDATE DATE NOT NULL,
GROSSTAKINGS NUMBER(8,2) NOT NULL CHECK(GROSSTAKINGS>0),
PAIDTOCOMPANY NUMBER(8,2) NOT NULL CHECK(PAIDTOCOMPANY>0),
NETEARNINGS NUMBER(8,2) NOT NULL CHECK(NETEARNINGS>0),
CONSTRAINT FK_DRIVER_REVENUE FOREIGN KEY(DRIVERID) REFERENCES DRIVER(DRIVERLICENSEID) ON DELETE SET NULL
);

/* CORPERATE_CLIENT Table */ 
CREATE TABLE CORPORATE_CLIENT (
CLIENTID CHAR(9) PRIMARY KEY CHECK(LENGTH(CLIENTID)=9),
CORPERATIONNAME VARCHAR(50) NOT NULL,
CONSTRAINT FK_CORPORATE_CLIENT_CLIENTID FOREIGN KEY(CLIENTID) REFERENCES CLIENTS(CLIENTID) ON DELETE CASCADE
);

/* EMPLOYEE_INCIDENTS Table */ 
CREATE TABLE EMPLOYEE_INCIDENTS (
INCIDENTID CHAR(9) PRIMARY KEY CHECK(LENGTH(INCIDENTID)=9),
NINUMBER CHAR(9) CHECK(LENGTH(NINUMBER)=9),
INCIDENTTYPE VARCHAR2(20) NOT NULL,
INCIDENTNOTES VARCHAR2(4000),
INCIDENTDATE DATE NOT NULL, 
CONSTRAINT FK_EMPLOYEE_INCIDENTS FOREIGN KEY (NINUMBER) REFERENCES EMPLOYEE(NINUMBER) ON DELETE SET NULL
);

/* CARS Table */ 
CREATE TABLE CARS (
REGISTRATIONNO CHAR(7) PRIMARY KEY CHECK(LENGTH(REGISTRATIONNO)<=7),
DRIVERID CHAR(9) NOT NULL CHECK(LENGTH(DRIVERID)=9),
REGISTRATIONYEAR INTEGER NOT NULL,
MILEAGE VARCHAR(10) NOT NULL CHECK(MILEAGE>0),
LASTMOTDATE DATE NOT NULL,
NOOFSEATS VARCHAR(10) NOT NULL CHECK(NOOFSEATS>=4),
CARSTATUS VARCHAR(30) NOT NULL,
OWNERID VARCHAR(9) NOT NULL,
CONSTRAINT FK_CARS_DRIVERID FOREIGN KEY (DRIVERID) REFERENCES DRIVER(DRIVERLICENSEID) ON DELETE CASCADE
);

/* SHIFT Table */ 
CREATE TABLE SHIFT (
SHIFTID CHAR(9) PRIMARY KEY CHECK(LENGTH(SHIFTID)=9),
EMPLOYEEID CHAR(9) CHECK(LENGTH(EMPLOYEEID)=9),
SHIFTDATE DATE NOT NULL,
SHIFTTYPE VARCHAR(20) NOT NULL,
CONSTRAINT FK_SHIFT_EMPLOYEEID FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEE(NINUMBER) ON DELETE SET NULL
);

/* PAYMENT Table */ 
CREATE TABLE PAYMENT (
PAYMENTID CHAR(9) PRIMARY KEY CHECK(LENGTH(PAYMENTID)=9),
BOOKINGID CHAR(9) CHECK(LENGTH(BOOKINGID)=9),
PAYMENTMETHOD VARCHAR(10) NOT NULL,
PAYMENTDATE DATE NOT NULL,
PAYEESFIRSTNAME VARCHAR(255) NOT NULL,
PAYEESLASTNAME VARCHAR(255) NOT NULL,
CARDNUMBER VARCHAR(16),
EXPIRYDATE DATE,
CVV CHAR(3) CHECK(LENGTH(CVV)=3),
AMOUNTPAID NUMBER(8,2) NOT NULL CHECK(AMOUNTPAID>0),
CONSTRAINT FK_PAYMENT_BOOKINGID FOREIGN KEY (BOOKINGID) REFERENCES BOOKING(BOOKINGID) ON DELETE SET NULL
);

/* RECURRENT_BOOKING Table */ 
CREATE TABLE RECURRENT_BOOKING (
BOOKINGID CHAR(9) PRIMARY KEY CHECK(LENGTH(BOOKINGID)=9),
REGBOOKID CHAR(9) NOT NULL CHECK(LENGTH(REGBOOKID)=9),
CONSTRAINT FK_RECURRENT_BOOKING_BOOKINGID FOREIGN KEY (BOOKINGID) REFERENCES BOOKING(BOOKINGID) ON DELETE CASCADE,
CONSTRAINT FK_RECURRENT_BOOKING_REGBOOKID FOREIGN KEY (REGBOOKID) REFERENCES REGULAR_BOOKING(REGBOOKID) ON DELETE CASCADE
);
