CREATE TRIGGER PAY_TYPE_TRIGGER
BEFORE UPDATE OF PAYVALUE OR INSERT ON PAY_TYPE
FOR EACH ROW
BEGIN
        IF :NEW.PAYTYPE = 'FIXEDTEMP'
        THEN
            :NEW.PAYVALUE := 24000;
        END IF;
END;
/

CREATE TRIGGER CHECK_MOT_TRIGGER
    BEFORE UPDATE OF LASTMOTDATE OR INSERT ON CARS
    FOR EACH ROW
BEGIN
    IF :NEW.LASTMOTDATE > SYSDATE
    THEN
        RAISE_APPLICATION_ERROR(-20512, 'MOT DATE MUST BE LESS THAN 
            TODAYS DATE');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER MOT_TRIGGER
BEFORE UPDATE OF LASTMOTDATE OR INSERT ON CARS
FOR EACH ROW
DECLARE MOT_AGE NUMBER;
BEGIN
SELECT (MONTHS_BETWEEN(SYSDATE, :NEW.LASTMOTDATE)/12)  
INTO MOT_AGE FROM DUAL;
        IF (MOT_AGE > 1 AND MOT_AGE < 4)
        THEN
            :NEW.CARSTATUS := 'AWAITING REPAIR (MOT)';
            dbms_output.put_line('MOT is outdated');
        ELSE IF MOT_AGE > 5 THEN
            RAISE_APPLICATION_ERROR(-20532, 'MOT is outdated');
    END IF;
    END IF;
END;
/

CREATE TRIGGER INCIDENT_NOTES_TRIGGER
BEFORE UPDATE OF INCIDENTNOTES OR INSERT ON EMPLOYEE_INCIDENTS
FOR EACH ROW
BEGIN
IF :NEW.INCIDENTTYPE = 'DISCIPLINARY ACTION' AND :NEW.INCIDENTNOTES
IS NULL;
        THEN
                RAISE_APPLICATION_ERROR (-20001,'Incident notes must be filled out');
END IF;
END;
/

CREATE TRIGGER INCIDENT_TYPE_TRIGGER
BEFORE UPDATE OF INCIDENTTYPE OR INSERT ON EMPLOYEE_INCIDENTS
FOR EACH ROW
BEGIN
IF :NEW.INCIDENTTYPE != 'SICK' OR :NEW.INCIDENTTYPE != 'DISCIPLINARY
ACTION' OR :NEW.INCIDENTTYPE != 'VACTION'
THEN
RAISE_APPLICATION_ERROR(-20592, 'Invalid incident type');
END IF;
END;
/

CREATE OR REPLACE TRIGGER eight_operators_only 
BEFORE INSERT ON OPERATOR 
DECLARE OperatorCount NUMBER;
BEGIN
SELECT count(*) INTO OperatorCount FROM OPERATOR;
IF (OperatorCount > 7) THEN
RAISE_APPLICATION_ERROR(-20512, 'There are already 8 operators in the
system, you cannot hire or record anymore.');
        END IF;
END;
/

